events {}

http {
    # Grupo de servidores ML
    upstream backend {
        least_conn; // Balanceo de carga por conexiones activas
        server 172.20.100.95:8000; #Servidor de backend de una instancia de ML
        server 172.20.100.78:8000; #Servidor de backend de una instancia de ML
    }

    #Configuramos un servidor virtual
    server{
        listen 80 ssl; #Escuchamos en el puerto 80
        server_name TuneTuneTuneAPI.com; #Nombre del servidor virtual
        ssl_certificate /etc/ssl/certs/tunetunetune.crt; #Certificado SSL
        ssl_certificate_key /etc/ssl/private/tunetunetune.key; #Clave privada del certificado SSL
        #Se resuelven los servidores del grupo seleccionado en el proxy pass en una localización
        #BACKEND
        location /{ #Cualquier petición que empiece por / se redirige por el proxy_pass
            proxy_pass http://backend; #Redirigimos a los servidores del grupo backend
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}

    # server {
    #     listen 80;

    #     # FRONTEND
    #     location / {
    #         proxy_pass http://172.20.100.162:3000;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #     }

    #     # BACKEND
    #     location /api/ {
    #         proxy_pass http://172.20.100.20:8000;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #     }

    #     # ML API (balanceo)
    #     location /ml-api/ {
    #         proxy_pass http://ml_api;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #     }
    # }
#}
